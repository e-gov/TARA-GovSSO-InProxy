<?xml version="1.0" encoding="UTF-8" ?>
<configuration scan="true" scanPeriod="30 minutes">
    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>
    <contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator"/>

    <springProperty scope="context" name="service.name" source="spring.application.name"/>

    <property name="log.files.dir" value="${LOG_HOME:-${java.io.tmpdir:-/tmp}}"/>
    <property name="log.files.max.count" value="${LOG_FILES_MAX_COUNT:-31}"/>
    <property name="log.level.console" value="${LOG_CONSOLE_LEVEL:-INFO}"/>
    <property name="log.level.file" value="${LOG_FILE_LEVEL:-OFF}"/>
    <property name="log.file.prefix" value="${LOG_FILE_PREFIX:-TaraGovssoInProxy}"/>
    <property name="log.service.type" value="${LOG_SERVICE_TYPE:-govsso}"/>

    <property name="log.console.pattern"
              value="${LOG_CONSOLE_PATTERN:-%d{yyyy-MM-dd'T'HH:mm:ss.SSS'Z',GMT} [${service.name}] [%15.15t] %highlight(%-5level) %-40.40logger{39} [%X{trace.id}] -%msg %green(%marker){}%n}"/>

    <!-- Recommended stack trace exclusion pattern for Spring Framework at https://github.com/logfellow/logstash-logback-encoder/blob/main/stack-hash.md -->
    <property name="STE_EXCLUSIONS"
              value="\$\$FastClassByCGLIB\$\$,\$\$EnhancerBySpringCGLIB\$\$,^sun\.reflect\..*\.invoke,^com\.sun\.,^sun\.net\.,^net\.sf\.cglib\.proxy\.MethodProxy\.invoke,^org\.springframework\.cglib\.,^org\.springframework\.transaction\.,^org\.springframework\.validation\.,^org\.springframework\.app\.,^org\.springframework\.aop\.,^java\.lang\.reflect\.Method\.invoke,^org\.springframework\.ws\..*\.invoke,^org\.springframework\.ws\.transport\.,^org\.springframework\.ws\.soap\.saaj\.SaajSoapMessage\.,^org\.springframework\.ws\.client\.core\.WebServiceTemplate\.,^org\.springframework\.web\.filter\.,^org\.apache\.tomcat\.,^org\.apache\.catalina\.,^org\.apache\.coyote\.,^java\.util\.concurrent\.ThreadPoolExecutor\.runWorker,^java\.lang\.Thread\.run$"/>

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>${log.level.console}</level>
        </filter>
        <encoder>
            <pattern>${log.console.pattern}</pattern>
        </encoder>
    </appender>

    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <append>true</append>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.files.dir}/${log.file.prefix}.%d{yyyy-MM-dd,GMT}.log</fileNamePattern>
            <maxHistory>${log.files.max.count}</maxHistory>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>${log.level.file}</level>
        </filter>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <jsonFactoryDecorator class="ee.ria.govsso.inproxy.logging.LogbackJsonFactoryDecorator"/>
            <providers>
                <timestamp>
                    <fieldName>@timestamp</fieldName>
                    <pattern>yyyy-MM-dd'T'HH:mm:ss.SSSZZ</pattern>
                    <timeZone>UTC</timeZone>
                </timestamp>
                <message/>
                <pattern>
                    <omitEmptyFields>true</omitEmptyFields>
                    <pattern>
                        {
                        "log.level": "%level",
                        "log.logger": "%logger",
                        "process.pid": "#asLong{${PID}}",
                        "process.thread.name": "%thread",
                        "service.type": "${log.service.type}"
                        }
                    </pattern>
                </pattern>
                <context/>
                <stackTrace>
                    <fieldName>error.stack_trace</fieldName>
                    <throwableConverter class="net.logstash.logback.stacktrace.ShortenedThrowableConverter">
                        <exclusions>${STE_EXCLUSIONS}</exclusions>
                        <inlineHash>true</inlineHash>
                    </throwableConverter>
                </stackTrace>
                <stackHash>
                    <fieldName>custom.error.stack_hash</fieldName>
                    <exclusions>${STE_EXCLUSIONS}</exclusions>
                </stackHash>
                <rootStackTraceElement>
                    <fieldName>custom.error.root_stack_trace_element</fieldName>
                </rootStackTraceElement>
                <throwableRootCauseClassName>
                    <fieldName>error.type</fieldName>
                    <useSimpleClassName>false</useSimpleClassName>
                </throwableRootCauseClassName>
                <logstashMarkers/>
                <mdc/>
                <arguments/>
            </providers>
        </encoder>
    </appender>

    <appender name="accessLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <append>true</append>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.files.dir}/access_log.%d{yyyy-MM-dd,GMT}.log</fileNamePattern>
            <maxHistory>${log.files.max.count}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%msg%n</pattern>
        </encoder>
    </appender>
    <appender name="async" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="accessLog" />
    </appender>

    <logger name="reactor.netty.http.server.AccessLog" level="INFO" additivity="false">
        <appender-ref ref="async"/>
    </logger>

    <root level="INFO">
        <appender-ref ref="FILE"/>
        <appender-ref ref="STDOUT"/>
    </root>
</configuration>
